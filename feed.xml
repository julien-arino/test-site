<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://julien-arino.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://julien-arino.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-02-02T05:55:03+00:00</updated><id>https://julien-arino.github.io/feed.xml</id><title type="html">blank</title><subtitle>Summary of work, publications, etc. </subtitle><entry><title type="html">Compiling R on a Raspberry Pi and getting rid of the 128 threads limitation</title><link href="https://julien-arino.github.io/blog/2023/R-on-raspberri-pi-and-more-than-128-threads/" rel="alternate" type="text/html" title="Compiling R on a Raspberry Pi and getting rid of the 128 threads limitation"/><published>2023-02-05T00:00:00+00:00</published><updated>2023-02-05T00:00:00+00:00</updated><id>https://julien-arino.github.io/blog/2023/R-on-raspberri-pi-and-more-than-128-threads</id><content type="html" xml:base="https://julien-arino.github.io/blog/2023/R-on-raspberri-pi-and-more-than-128-threads/"><![CDATA[<p>Does that title sound confusing? It should! Clearly, a 4 threaded Raspberry Pi should not hit that annoying “feature” baked in <code class="language-plaintext highlighter-rouge">R</code> whereby the number of sockets is limited to 125+3. Except that yes, it can, when the Pi used as the head node on a cluster.</p> <h2 id="the-context">The context</h2> <p>As part of work on COVID-19 response, I was awarded a contract to increase my capacity for at home computing. Of course, some work was still carried out in a proper HPC setting, but there is a benefit to being able to run mid-range stuff efficiently as well as prototype and debug stuff before sending it to some HPC resource. So in March and April 2020, I ordered and built four machines. Actually, make that five: four “proper” machines and a Pi to rule them all. All the pieces required 47 different deliveries and got me on a first name basis with several UPS and Amazon delivery people. After several exchanges, my setup has looked essentially like this:</p> <ul> <li>1 Raspberry Pi 4 with 4 GB of RAM running Ubuntu.</li> <li>3 Threadripper 3790X machines running Ubuntu, each with 128 GB RAM and a 500 GB NVMe M.2 HD.</li> <li>1 Threadripper 3990X machine running Ubuntu with 192 GB RAM (and also a 500 GB HD).</li> <li>1 NAS with 4 TB storage.</li> <li>1 swicth connecting all that can (i.e., all but the Pi) using link bonding and the Pi using a single link.</li> </ul> <p>The 3790X have 32 cores/64 threads, the 3990X has 64/128. So my little space heater (hydro bills have been impacted substantially when all the machines run concurrently) has 320 compute threads and 4 on the Pi.</p> <h2 id="my-original-usage">My original usage</h2> <p>With some tweaking of the BIOS, I gently overclocked the Threadrippers (the 3990X, in particular, is a little sluggish for the type of computations I run) and convinced the motherboards to recognise all the RAM at its posted speed. I started using in production right away, which means I did not bother with my configuration and kept things as simple as possible.</p> <p>This is when I hit the “125+3 sockets in <code class="language-plaintext highlighter-rouge">R</code>” issue the first time: my code was running fine on the 3970X but refusing to run on the 3990X. Dug into it and worked out that setting the number of CPUs to 125 in my calls to <code class="language-plaintext highlighter-rouge">makeCluster</code> on the 3990X did the trick. With 4 perfectly capable compute nodes and easily parallelisable tasks, it is easy enough to produce a job list and have the Pi distribute it between nodes, have the nodes save the results locally upon completion and have the Pi running periodic “<code class="language-plaintext highlighter-rouge">rsync</code> repatriations” of the results from the nodes to the NAS. Once the computations were done, I used one of the compute nodes to bring the pieces together.</p> <h2 id="compiling-r-to-remove-the-1253-sockets-limitation">Compiling <code class="language-plaintext highlighter-rouge">R</code> to remove the 125+3 sockets limitation</h2> <p>Besides using <strong>all</strong> threads on the 3990X, I am also keen to drive all computations from a single designated node (when warranted, of course). I have been meaning to do this for quite a while, but this was rather low on my priority list. (I also want to play around with solutions such as <code class="language-plaintext highlighter-rouge">slurm</code> or <code class="language-plaintext highlighter-rouge">htcondor</code>, but this will be for later.) And here, the 125+3 sockets pops up again: as far as I understand it, the head node needs as many sockets as threads it is talking to, i.e., 320 in my case.</p> <p>I have an old refurbished Dell Precision T7600 with two 8 cores E5-2690 Xeons and 128 GB of RAM that can be the head node. But what is the fun in that when I also have a Pi to play with? So, now that I have a bit more time, I decided to bite the bullet and try things out.</p> <p>First step, remove the 128 sockets limitation. Extremely easy: just compile <code class="language-plaintext highlighter-rouge">R</code> from sources. Which was deceptively easy, even on the Pi. This should not have been a surprise for someone coming from the days of yore when Linux did not have <code class="language-plaintext highlighter-rouge">deb</code> or <code class="language-plaintext highlighter-rouge">rpm</code> and every program installation required compilation. I took some inspiration <a href="https://www.psyctc.org/Rblog/posts/2021-03-26-compiling-r-on-a-raspberry-pi-4/">here</a>, but will point out that I had virtually none of the steps described there to follow, as I had had to install most of the software required for compilations prior to that.</p> <p>The process is easy. Download the <code class="language-plaintext highlighter-rouge">R</code> source code from <a href="https://cran.r-project.org/sources.html">here</a>. (I used the <a href="https://stat.ethz.ch/R/daily/R-patched.tar.gz">patched release</a>.) Extract the tarball and move into the resulting directory. See some information <a href="https://parallelly.futureverse.org/reference/availableConnections.html">here</a> about setting the maximum allowed number of connections, but in short: edit the file <code class="language-plaintext highlighter-rouge">src/main/connections.c</code> and replace</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#define NCONNECTIONS 128
</span></code></pre></div></div> <p>with whatever limit you want to impose. There is some discussion <a href="https://github.com/HenrikBengtsson/Wishlist-for-R/issues/28">here</a> on potential issues related to the number chosen; completely ignoring these issues, I decided to pick 1024.</p> <p>Then <code class="language-plaintext highlighter-rouge">configure</code>, <code class="language-plaintext highlighter-rouge">make</code> (<code class="language-plaintext highlighter-rouge">make -j4</code>, perhaps) and <code class="language-plaintext highlighter-rouge">sudo make install</code> and you are in business. One remark, though: I prefer for the <code class="language-plaintext highlighter-rouge">R</code> executables and libraries to reside in <code class="language-plaintext highlighter-rouge">/usr</code> rather than <code class="language-plaintext highlighter-rouge">/usr/local</code> (for consistency with <code class="language-plaintext highlighter-rouge">deb</code> install of the standard code). Also, if you are going to run <code class="language-plaintext highlighter-rouge">rstudio-server</code>, you <strong>must</strong> compile for a shared <code class="language-plaintext highlighter-rouge">R</code> library. So, in short, instead of a simple <code class="language-plaintext highlighter-rouge">./configure</code>, I ran</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./configure <span class="nt">--prefix</span><span class="o">=</span>/usr <span class="nt">--enable-R-shlib</span>
</code></pre></div></div> <p>That latter point is worth mentioning: yes, <code class="language-plaintext highlighter-rouge">rstudio-server</code> on a Pi! I just recently realised that although the main <code class="language-plaintext highlighter-rouge">rstudio-server</code> site does not list it, <code class="language-plaintext highlighter-rouge">rstudio</code> and <code class="language-plaintext highlighter-rouge">rstudio-server</code> are available for <code class="language-plaintext highlighter-rouge">arm64</code> as <a href="https://dailies.rstudio.com/">daily builds</a>. And that <code class="language-plaintext highlighter-rouge">R</code> shared lib is important in this context: <code class="language-plaintext highlighter-rouge">rstudio-server</code> will not work otherwise.</p> <h2 id="taking-it-for-a-spin">Taking it for a spin</h2> <p>Simple call to check things are working. Run the following code, adapting to your setup. (Note that this implies you have set up your machines to use shared key <code class="language-plaintext highlighter-rouge">ssh</code>.) Note that in the code here, I have not yet used the adapted version of <code class="language-plaintext highlighter-rouge">R</code> on the 3990X, so I am limiting things to 125 threads there.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">node0</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'192.168.0.50'</span><span class="w">
</span><span class="n">node1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'192.168.0.51'</span><span class="w">
</span><span class="n">node2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'192.168.0.52'</span><span class="w">
</span><span class="n">node3</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'192.168.0.53'</span><span class="w">
</span><span class="n">node4</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'192.168.0.54'</span><span class="w">
</span><span class="n">machineAddresses</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="w">
  </span><span class="nf">list</span><span class="p">(</span><span class="n">host</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">node0</span><span class="p">,</span><span class="w"> </span><span class="n">user</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'jarino'</span><span class="p">,</span><span class="w"> </span><span class="n">ncore</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">),</span><span class="w">
  </span><span class="nf">list</span><span class="p">(</span><span class="n">host</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">node1</span><span class="p">,</span><span class="w"> </span><span class="n">user</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'jarino'</span><span class="p">,</span><span class="w"> </span><span class="n">ncore</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">64</span><span class="p">),</span><span class="w">
  </span><span class="nf">list</span><span class="p">(</span><span class="n">host</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">node2</span><span class="p">,</span><span class="w"> </span><span class="n">user</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'jarino'</span><span class="p">,</span><span class="w"> </span><span class="n">ncore</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">64</span><span class="p">),</span><span class="w">
  </span><span class="nf">list</span><span class="p">(</span><span class="n">host</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">node3</span><span class="p">,</span><span class="w"> </span><span class="n">user</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'jarino'</span><span class="p">,</span><span class="w"> </span><span class="n">ncore</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">64</span><span class="p">),</span><span class="w">
  </span><span class="nf">list</span><span class="p">(</span><span class="n">host</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">node4</span><span class="p">,</span><span class="w"> </span><span class="n">user</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'jarino'</span><span class="p">,</span><span class="w"> </span><span class="n">ncore</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">125</span><span class="p">)</span><span class="w">
</span><span class="p">)</span><span class="w">
</span><span class="n">spec</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">machineAddresses</span><span class="p">,</span><span class="w">
               </span><span class="k">function</span><span class="p">(</span><span class="n">machine</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
                 </span><span class="nf">rep</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="n">machine</span><span class="o">$</span><span class="n">host</span><span class="p">,</span><span class="w"> </span><span class="n">user</span><span class="o">=</span><span class="n">machine</span><span class="o">$</span><span class="n">user</span><span class="p">)),</span><span class="w">
                     </span><span class="n">machine</span><span class="o">$</span><span class="n">ncore</span><span class="p">)</span><span class="w">
               </span><span class="p">})</span><span class="w">
</span><span class="n">spec</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">spec</span><span class="p">,</span><span class="w"> </span><span class="n">recursive</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span><span class="n">parallelCluster</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">parallel</span><span class="o">::</span><span class="n">makeCluster</span><span class="p">(</span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'PSOCK'</span><span class="p">,</span><span class="w">
                                         </span><span class="n">master</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">node0</span><span class="p">,</span><span class="w">
                                         </span><span class="n">spec</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">spec</span><span class="p">)</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="n">parallelCluster</span><span class="p">)</span><span class="w">
</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nf">is.null</span><span class="p">(</span><span class="n">parallelCluster</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">parallel</span><span class="o">::</span><span class="n">stopCluster</span><span class="p">(</span><span class="n">parallelCluster</span><span class="p">)</span><span class="w">
  </span><span class="n">parallelCluster</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">()</span><span class="w">
</span><span class="p">}</span></code></pre></figure> <p>Then, calling <code class="language-plaintext highlighter-rouge">test_cluster.R</code> this code and running it from the command line,</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jarino@node0:~/CODE<span class="nv">$ </span>Rscript test_cluster.R 
socket cluster with 319 nodes on hosts ‘192.168.0.50’, ‘192.168.0.51’, ‘192.168.0.52’, ‘192.168.0.53’, ‘192.168.0.54’
</code></pre></div></div> <p>So we are good! For comparison, running from a node with a “standard” <code class="language-plaintext highlighter-rouge">R</code> without the number of sockets increased (modifying the head node to be <code class="language-plaintext highlighter-rouge">node1</code>), we get the usual error:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jarino@node1:~/CODE<span class="nv">$ </span>Rscript test_cluster.R 
Error <span class="k">in </span>socketConnection<span class="o">(</span><span class="s2">"localhost"</span>, port <span class="o">=</span> port, server <span class="o">=</span> TRUE, blocking <span class="o">=</span> TRUE,  : 
  all connections are <span class="k">in </span>use
Calls: &lt;Anonymous&gt; ... makePSOCKcluster -&gt; newPSOCKnode -&gt; socketConnection
Execution halted
Error <span class="k">in </span>gzfile<span class="o">(</span>file, <span class="s2">"rb"</span><span class="o">)</span> : all connections are <span class="k">in </span>use
Calls: &lt;Anonymous&gt; -&gt; cleanup -&gt; loadNamespace -&gt; readRDS -&gt; gzfile
</code></pre></div></div> <p>Two final remarks.</p> <ol> <li>The call to <code class="language-plaintext highlighter-rouge">makeCluster</code> can be quite lengthy (several minutes), even in this simple case with no functions or libraries to declare to the workers, so it is important to decide whether this level of parallelisation is required; if not, things may run much faster on 4 separate computers with result agregation as described earlier.</li> <li>Clearly, this setup will require, in most instances, to have the code running on the compute nodes store the result locally there rather than return results to the head node. Indeed, only small sized return values would not quickly overwhelm the Pi’s small RAM.</li> </ol>]]></content><author><name></name></author><category term="r-code"/><summary type="html"><![CDATA[Some considerations on compiling R on a Raspberry Pi to get rid of the 128 threads limitation]]></summary></entry><entry><title type="html">A short Mathematical Epidemiology course</title><link href="https://julien-arino.github.io/blog/2022/3MC-short-course-math-epi/" rel="alternate" type="text/html" title="A short Mathematical Epidemiology course"/><published>2022-04-29T00:00:00+00:00</published><updated>2022-04-29T00:00:00+00:00</updated><id>https://julien-arino.github.io/blog/2022/3MC-short-course-math-epi</id><content type="html" xml:base="https://julien-arino.github.io/blog/2022/3MC-short-course-math-epi/"><![CDATA[<p>I recently (early April 2022) taught a short course on Mathematical Epidemiology at <a href="https://www.nwu.ac.za/">North-West University</a> in Potchefstroom in South Africa. The course was part of the <a href="https://natural-sciences.nwu.ac.za/paa/3MC">Mathematical Modeling Mini-Courses (3MC)</a> series organised by Patrick M Tchepmo Djomegni (North-West University) and Mahamat S Daoussa Haggar (University of N’Djamena, Tchad).</p> <p>Videos were recorded during the event but were re-recorded because of issues that arose during recording; the new videos are part of this <a href="https://youtube.com/playlist?list=PLfRaznSpWo2sHwiQ04IT5STYdwarcMtRA">YouTube playlist</a>.</p> <p>The course involved both regular lectures and practicums (tutorial type lectures). The links are to the YouTube videos (see this <a href="https://julien-arino.github.io/3MC-course-epidemiological-modelling/">GitHub repo</a> for the slides, code and further information), which last a total of just over 15 hours.</p> <ul> <li>Lecture 00: <a href="https://youtu.be/MYBSTv1dWRA">Course organisation</a> - 21:16</li> <li>Lecture 01: <a href="https://youtu.be/StIRQIT0WSo">History of epidemics and Historical epidemics</a> - 47:13</li> <li>Lecture 02: <a href="https://youtu.be/tMHwnrN3dXk">Basic Mathematical Epidemiology</a> - 2:14:34</li> <li>Lecture 03: <a href="https://youtu.be/Jz317w81oZY">Spread of infections in groups / in space</a> - 56:45</li> <li>Lecture 04: <a href="https://youtu.be/j63HwBbapHE">Group models</a> - 29:21</li> <li>Lecture 05: <a href="https://youtu.be/wk64L-ZEOUM">Metapopulation epidemic models</a> - 1:43:34</li> <li>Lecture 06: <a href="https://youtu.be/ApPSTJfQN74">Stochastic aspects in the spread of epidemics</a> - 1:01:19</li> <li>Lecture 07: <a href="https://youtu.be/J4w5gCdReAI">Stochastic epidemic models</a> - 1:00:53</li> <li>Lecture 08: <a href="https://youtu.be/UpSv8JcNecg">Agent-based models</a> - 30:41</li> <li> <p>Lecture 09: <a href="https://youtu.be/tFjPug1f4Ms">Some recent mathematical models for HIV/AIDS, Malaria, COVID-19</a> - 1:05:36</p> </li> <li>Practicum 01: <a href="https://youtu.be/nzzugOQuaro">Introduction to R. Collecting data. Solving ODEs in R</a> - 1:59:56</li> <li>Practicum 02: <a href="https://youtu.be/KHm7KIt1_ys">Model analysis, studying large-scale models in R</a> - 1:40:09</li> <li>Practicum 03: <a href="https://youtu.be/5b1RDIz03S0">Analysis, studying stochastic models in R. Simulating agent-based models</a> - 1:13:41</li> </ul>]]></content><author><name></name></author><category term="presentations"/><summary type="html"><![CDATA[Lecture notes and videos of the 3MC short course on Mathematical Epidemiology I taught at NWU, South Africa, in April 2022]]></summary></entry><entry><title type="html">Un petit cours d’épidémiologie mathématique</title><link href="https://julien-arino.github.io/blog/2022/petit-cours-epi-math/" rel="alternate" type="text/html" title="Un petit cours d’épidémiologie mathématique"/><published>2022-04-29T00:00:00+00:00</published><updated>2022-04-29T00:00:00+00:00</updated><id>https://julien-arino.github.io/blog/2022/petit-cours-epi-math</id><content type="html" xml:base="https://julien-arino.github.io/blog/2022/petit-cours-epi-math/"><![CDATA[<p>En juin et juillet 2022, j’ai enseigné un “petit cours d’épidémiologie mathématique” à N’Djaména (Tchad), au sein du laboratoire <a href="https://l2mias.com/french/">L2MIAS</a>, à la demande de Mahamat S Daoussa Haggar (Président de l’<a href="https://www.universite-ndjamena.td/">Université de N’Djaména</a>).</p> <p>Les transparents du cours sont disponibles <a href="https://julien-arino.github.io/petit-cours-epidemio-mathematique/">ici</a>. J’enregisterai les vidéos correspondantes au cours durant l’automne 2022.</p>]]></content><author><name></name></author><category term="presentations"/><summary type="html"><![CDATA[Notes de cours d'un cours d'épidémiologie mathématique donné à N'Djaména (Tchad) en juin et juillet 2022.]]></summary></entry><entry><title type="html">Some useful Marp stuff</title><link href="https://julien-arino.github.io/blog/2022/useful-Marp-stuff/" rel="alternate" type="text/html" title="Some useful Marp stuff"/><published>2022-03-17T00:00:00+00:00</published><updated>2022-03-17T00:00:00+00:00</updated><id>https://julien-arino.github.io/blog/2022/useful-Marp-stuff</id><content type="html" xml:base="https://julien-arino.github.io/blog/2022/useful-Marp-stuff/"><![CDATA[<p>I posted some time back about using Marp to make presentations (see <a href="https://julien-arino.github.io/blog/2022/Marp-for-slides/">here</a>). In keeping with the idea that this blog is mostly for myself as a space to store stuff that is useful to me, here is a compendium of commands that I have found useful when preparing slides using Marp. I will edit this post regularly as I discover new tricks, rather than create another entry.</p> <p>As I mentioned in my original post about Marp, there is a gap between the way Marp is documented and my capacity to understand said documentation, but altogether: going further than what is doable using straight markdown is going to require using html/css code. So what follows is mostly in these formats. Note also that I am detailing stuff that works within Visual Studio Code, not using the command line version of Marp. The latter is more powerful and versatile but does not fit my current workflow.</p> <h2 id="using-multiple-columns-of-text">Using multiple columns of text</h2> <p>To generate the equivalent of a <code class="language-plaintext highlighter-rouge">minipage</code> in Beamer, you can use the following code.</p> <figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;style </span><span class="na">scoped</span><span class="nt">&gt;</span>
<span class="k">@import</span> <span class="sx">url('https://unpkg.com/tailwindcss@^2/dist/utilities.min.css')</span><span class="p">;</span>
<span class="nt">&lt;/style&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid grid-cols-2 gap-4"</span><span class="nt">&gt;</span>
<span class="nt">&lt;div&gt;</span>

Content of first column
<span class="nt">&lt;/div&gt;</span>

<span class="nt">&lt;div&gt;</span>

Content of second column
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span></code></pre></figure> <p>Two remarks. Firstly, the place where I got the code advocated for placing the import statement in the <code class="language-plaintext highlighter-rouge">yaml</code> header, something like</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
marp: true
-style: @import url('https://unpkg.com/tailwindcss@^2/dist/utilities.min.css');
---
</code></pre></div></div> <p>but I found that this results in a massive (1 MB) html file. Secondly, in the same spirit, I am using <code class="language-plaintext highlighter-rouge">&lt;style scoped&gt;</code> to say that this only applies to the current slide. Removing the keyword <code class="language-plaintext highlighter-rouge">scoped</code> would imply that all subsequent slides have access to the <code class="language-plaintext highlighter-rouge">grid grid-cols-2 gap-4</code> class. With, I imagine, the same code bloating. (Untested at this time.)</p> <h2 id="centering-figures">Centering figures</h2> <p>Another frustration when switching from Beamer to Marp is that there is no easy <code class="language-plaintext highlighter-rouge">\begin{center}</code> type command to center a figure in Marp. A variety of ways are available, but I found that the one that is easiest is to include something like</p> <figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;style&gt;</span>
<span class="nt">img</span><span class="o">[</span><span class="nt">alt</span><span class="o">~=</span><span class="s1">"center"</span><span class="o">]</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">block</span><span class="p">;</span>
  <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span> <span class="nb">auto</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">&lt;/style&gt;</span></code></pre></figure> <p>somewhere in your slides. Using <code class="language-plaintext highlighter-rouge">&lt;style&gt;</code> without the keyword <code class="language-plaintext highlighter-rouge">scope</code> means that the style is defined once and for all, so I put this at the end of my title page and forget about it. Once this is done,</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>![width:200px center](image_file.png)
</code></pre></div></div> <p>will center the figure.</p> <h2 id="boxes-for-definitions-theorems-etc">Boxes for definitions, theorems, etc.</h2> <p>Another one of these Beamer classics that is difficult to do in Marp.</p> <figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;div</span> <span class="na">align=</span><span class="s">justify</span> 
<span class="na">style=</span><span class="s">"background-color:#16a085;
border-radius:20px;
padding:10px 20px 10px 20px;
box-shadow: 0px 1px 5px #999;"</span><span class="nt">&gt;</span>

Some beautiful theorem (make sure to leave an empty line above the first line
of text if you want markdown to work).
<span class="nt">&lt;/div&gt;</span></code></pre></figure> <p>Now, here I have not done my homework: surely, there is a way to define this as a style, and it is likely that a future update of this blog post will have this. For the time being, I just copy and paste this code wherever I need it, changing the colour for definitions, etc.</p> <h2 id="numbering-equations-and-referring-to-them">Numbering equations and referring to them</h2> <p>This is my biggest frustration so far with using Marp. In many talks, I do not really care for this, but as part of a course that I am preparing (more on this in another post), I really need equation numbers. Whether it is MathJax or KaTeX, support for equation numbers is still sketchy altogether, but I find that Marp adds one level of complication. What I have managed to make work, at present, goes thusly.</p> <ul> <li>Switch the LaTeX interpreter from KaTeX to MathJax.</li> <li>Manually (grr) tag the equations with the number you want. Note the <code class="language-plaintext highlighter-rouge">\qquad</code> commands on the first line: if you do not use them in an <code class="language-plaintext highlighter-rouge">align</code> type environment, the equation numbers will be over the equations themselves.</li> </ul> <figure class="highlight"><pre><code class="language-latex" data-lang="latex"><span class="p">$$</span><span class="nb">
</span><span class="nv">\begin</span><span class="p">{</span><span class="nb">align</span><span class="p">}</span><span class="nb">
S' </span><span class="p">&amp;</span><span class="o">=</span><span class="nb"> d</span><span class="o">(</span><span class="nb">N</span><span class="o">-</span><span class="nb">S</span><span class="o">)-</span><span class="nb">f</span><span class="o">(</span><span class="nb">S,I,N</span><span class="o">)+</span><span class="nv">\nu</span><span class="nb"> R</span><span class="nv">\qquad\qquad</span><span class="nb"> </span><span class="nv">\tag</span><span class="p">{</span><span class="m">8</span><span class="nb">a</span><span class="p">}</span><span class="nv">\label</span><span class="p">{</span><span class="nb">sys:SLIR</span><span class="p">_</span><span class="nb">dS</span><span class="p">}</span><span class="nv">\\</span><span class="nb">
L' </span><span class="p">&amp;</span><span class="o">=</span><span class="nb"> f</span><span class="o">(</span><span class="nb">S,I,N</span><span class="o">)</span><span class="nb"> </span><span class="o">-(</span><span class="nb">d</span><span class="o">+</span><span class="nv">\varepsilon</span><span class="o">)</span><span class="nb">L </span><span class="nv">\tag</span><span class="p">{</span><span class="m">8</span><span class="nb">b</span><span class="p">}</span><span class="nv">\label</span><span class="p">{</span><span class="nb">sys:SLIR</span><span class="p">_</span><span class="nb">dL</span><span class="p">}</span><span class="nb"> </span><span class="nv">\\</span><span class="nb">
I' </span><span class="p">&amp;</span><span class="o">=</span><span class="nb"> </span><span class="nv">\varepsilon</span><span class="nb"> L </span><span class="o">-(</span><span class="nb">d</span><span class="o">+</span><span class="nv">\gamma</span><span class="o">)</span><span class="nb">I </span><span class="nv">\tag</span><span class="p">{</span><span class="m">8</span><span class="nb">a</span><span class="p">}</span><span class="nv">\label</span><span class="p">{</span><span class="nb">sys:SLIR</span><span class="p">_</span><span class="nb">dI</span><span class="p">}</span><span class="nb"> </span><span class="nv">\\</span><span class="nb">
R' </span><span class="p">&amp;</span><span class="o">=</span><span class="nb"> </span><span class="nv">\gamma</span><span class="nb"> I</span><span class="o">-(</span><span class="nb">d</span><span class="o">+</span><span class="nv">\nu</span><span class="o">)</span><span class="nb">R </span><span class="nv">\tag</span><span class="p">{</span><span class="m">8</span><span class="nb">d</span><span class="p">}</span><span class="nv">\label</span><span class="p">{</span><span class="nb">sys:SLIR</span><span class="p">_</span><span class="nb">dR</span><span class="p">}</span><span class="nb">
</span><span class="nv">\end</span><span class="p">{</span><span class="nb">align</span><span class="p">}</span><span class="nb">
</span><span class="p">$$</span></code></pre></figure> <ul> <li>Use <code class="language-plaintext highlighter-rouge">$\eqref{sys:SLIR_dL}$</code> to refer to, say, the second equation. Yes, the dollar signs need to be there..</li> </ul> <p>Yes, this is bad. It is particularly bad, actually, because I like the <code class="language-plaintext highlighter-rouge">subequations</code> environment and this is supported in neither KaTeX nor MathJax. I am hopeful that things will evolve in the future and will update this post if I find better ways to do this, but for now, this seems to be the way to do it.</p> <p>Remark that if you are not after a <code class="language-plaintext highlighter-rouge">subequations</code> type numbering, then you can do</p> <figure class="highlight"><pre><code class="language-latex" data-lang="latex"><span class="p">$$</span><span class="nb">
</span><span class="nv">\label</span><span class="p">{</span><span class="nb">sys:SLIR</span><span class="p">}</span><span class="nb">
</span><span class="nv">\begin</span><span class="p">{</span><span class="nb">align</span><span class="o">*</span><span class="p">}</span><span class="nb">
S' </span><span class="p">&amp;</span><span class="o">=</span><span class="nb"> d</span><span class="o">(</span><span class="nb">N</span><span class="o">-</span><span class="nb">S</span><span class="o">)-</span><span class="nb">f</span><span class="o">(</span><span class="nb">S,I,N</span><span class="o">)+</span><span class="nv">\nu</span><span class="nb"> R</span><span class="nv">\qquad\qquad</span><span class="nb"> </span><span class="nv">\\</span><span class="nb">
L' </span><span class="p">&amp;</span><span class="o">=</span><span class="nb"> f</span><span class="o">(</span><span class="nb">S,I,N</span><span class="o">)</span><span class="nb"> </span><span class="o">-(</span><span class="nb">d</span><span class="o">+</span><span class="nv">\varepsilon</span><span class="o">)</span><span class="nb">L </span><span class="nv">\\</span><span class="nb">
I' </span><span class="p">&amp;</span><span class="o">=</span><span class="nb"> </span><span class="nv">\varepsilon</span><span class="nb"> L </span><span class="o">-(</span><span class="nb">d</span><span class="o">+</span><span class="nv">\gamma</span><span class="o">)</span><span class="nb">I </span><span class="nv">\\</span><span class="nb">
R' </span><span class="p">&amp;</span><span class="o">=</span><span class="nb"> </span><span class="nv">\gamma</span><span class="nb"> I</span><span class="o">-(</span><span class="nb">d</span><span class="o">+</span><span class="nv">\nu</span><span class="o">)</span><span class="nb">R
</span><span class="nv">\end</span><span class="p">{</span><span class="nb">align</span><span class="o">*</span><span class="p">}</span><span class="nb">
</span><span class="p">$$</span></code></pre></figure> <p>This is a bit better. But no <code class="language-plaintext highlighter-rouge">subequations</code>..</p>]]></content><author><name></name></author><category term="presentations"/><summary type="html"><![CDATA[Compendium of commands useful in Marp: two columns, centering figures, formatting theorems, etc.]]></summary></entry><entry><title type="html">Using Marp to make cool html presentation slides</title><link href="https://julien-arino.github.io/blog/2022/Marp-for-slides/" rel="alternate" type="text/html" title="Using Marp to make cool html presentation slides"/><published>2022-02-20T00:00:00+00:00</published><updated>2022-02-20T00:00:00+00:00</updated><id>https://julien-arino.github.io/blog/2022/Marp-for-slides</id><content type="html" xml:base="https://julien-arino.github.io/blog/2022/Marp-for-slides/"><![CDATA[<p>For the file links, skip directly to the end of this post.</p> <h1 id="general-context">General context</h1> <p>Giving presentations about my research work is something I seem to do quite a lot. Perhaps because my MSc supervisor was a physician who put great emphasis on slide content and form, I have always spent a lot of time on my presentation files. I am often asked to give talks about my work on the spatio-temporal spread of infectious diseases using metapopulations; however, except in rare instances such as giving three times the same talk in three different universities over the course of two days, I always try to change things between two talks even if they have the same title. There is always something that did not flow well, some typo that appeared, some new idea to throw in, etc.</p> <p>All that to say: finding the good tool for preparing presentations has been an ongoing project.</p> <p>Let me start with the elephant in the room: I avoid like the plague tools like PowerPoint or LibreOffice Impress. This is a consequence of the epoch at which I started giving talks: back in the late 1990s, PowerPoint did very poorly with mathematics and only a few brave souls used it in talks.</p> <p>For efficiency, using a LaTeX based approach always seemed the best. You can copy and paste your content directly from your papers, thereby saving a lot of time. While it is possible to hack together a presentation, it is easier to use existing packages and through the years, I used several different tools.</p> <ul> <li><code class="language-plaintext highlighter-rouge">inriaslides</code>, back when I was working on my PhD at.. INRIA (now <a href="https://www.inria.fr/en/inria-centre-universite-cote-azur">Inria</a>).</li> <li>After I left Inria in 2001, it became silly to use their slide package (which put the logo everywhere, etc.) and so for a while, I actually used a simple model that I came up with. Key word being <em>simple</em>. I used this for about 2 years.</li> <li>In 2003, I started using <a href="https://ctan.org/pkg/prosper"><code class="language-plaintext highlighter-rouge">prosper</code></a>, which was a major step forward for LaTeX slides.</li> <li>Then, in the summer of 2005, I stumbled upon <a href="https://ctan.org/pkg/beamer"><code class="language-plaintext highlighter-rouge">Beamer</code></a>. <code class="language-plaintext highlighter-rouge">Beamer</code> was a revolution, because you compile your text directly using <code class="language-plaintext highlighter-rouge">pdflatex</code> instead of having to run through a sequence of conversions like with <code class="language-plaintext highlighter-rouge">prosper</code>.</li> </ul> <h1 id="beamer-and-the-joys-of-embedding-movies">Beamer and the joys of embedding movies</h1> <p><code class="language-plaintext highlighter-rouge">Beamer</code> is great, but one of the major headaches has always been the inclusion of movies in the <code class="language-plaintext highlighter-rouge">pdf</code> files generated. It was a pain, but with the retirement of <code class="language-plaintext highlighter-rouge">flash</code> support at the beginning of 2021, this became completely impossible. I do not embed that many movies, but it happens often enough that I need a reliable and not too complicated way of doing so.</p> <h1 id="marp">Marp</h1> <p>With the “death” of the flash route for embedding movies, I looked for other ways to generate files potentially involving movies. As part of my using <code class="language-plaintext highlighter-rouge">Rmarkdown</code>, I have become quite a fan of <code class="language-plaintext highlighter-rouge">markdown</code>, so when I found <a href="https://marp.app/">Marp</a>, I decided to give it a shot.</p> <p>One word of warning, first: Marp is developed by programmers who, I think, have not yet understood that with the proper support for LaTeX (see later) and the defection of people like me from the <code class="language-plaintext highlighter-rouge">Beamer</code> ecosystem, some of their newer users are not programmers. For now, requests for help are often answered promptly but not very helpfully from the perspective of a non-specialist. This is part of the reason for my making my markdown files accessible together with rendered html and pdf files of the presentations I will post.</p> <h2 id="running-marp">Running Marp</h2> <p>It is possible to install a command line version of Marp and this is the way to achieve the best results, but I find that the Visual Studio Code extension does a good enough job for my usage and that is what I use most often. You can preview what you type as you are typing it and can then easily export to <code class="language-plaintext highlighter-rouge">html</code>, <code class="language-plaintext highlighter-rouge">pdf</code> or PowerPoint.</p> <h2 id="writing-slides">Writing slides</h2> <p>The main thing to know is that your file needs to contain a <code class="language-plaintext highlighter-rouge">YAML</code> header to set a few properties of the document and separates <code class="language-plaintext highlighter-rouge">markdown</code> containing slides by <code class="language-plaintext highlighter-rouge">---</code> markers. And can include mathematics.</p> <ul> <li><strong>YAML header</strong>. This is where you define such things as the title that will appear in the browser tab (in the case of an <code class="language-plaintext highlighter-rouge">html</code> render), the slides form factor, inclusions, etc.</li> <li><strong>Separate slides with —</strong>. Beware to leave an empty line after and above the separators.</li> <li><strong>Markdown content</strong>. That makes things very easy.</li> <li><strong>Mathematics support</strong>. Probably the most important characteristic for modellers. Marp allows to choose whether you use <a href="https://www.mathjax.org/">MathJax</a> or <a href="https://katex.org/">KaTeX</a>, with KaTeX used by default. KaTeX seems to be faster than MathJax and is quite similar in practice to MathJax anyway. The biggest difference in my recent experience is that</li> </ul> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>\begin{align*}
x &amp; xx \\
y &amp; yy 
\end{align*}
</code></pre></div></div> <ul class="list-unstyled"> needs to be typeset as </ul> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$$
\begin{aligned}
x &amp; xx \\
y &amp; yy 
\end{aligned}
$$
</code></pre></div></div> <ul class="list-unstyled"> as KaTeX in Marp does not recognise ``\begin{align*}`` and similar environments. So porting LaTeX to Marp sometimes involves a little bit more work than when porting to Beamer, but this remains easy. </ul> <h2 id="additional-styling-elements">Additional styling elements</h2> <p>Note that it is possible to use <code class="language-plaintext highlighter-rouge">html</code> or <code class="language-plaintext highlighter-rouge">css</code> constructs in the code to obtain results that are more elaborate than what is allowed by basic <code class="language-plaintext highlighter-rouge">markdown</code>. This goes a bit against the philosophy that underlies LaTeX and <code class="language-plaintext highlighter-rouge">markdown</code>, but is useful.</p> <h1 id="where-to-find-my-presentation-files">Where to find my presentation files</h1> <p>[Update 2022-02-27] To finish, files are available from <a href="https://github.com/julien-arino/presentations">this GitHub repository</a>. They can be seen in several format.</p> <ul> <li>The <code class="language-plaintext highlighter-rouge">markdown</code> files, <code class="language-plaintext highlighter-rouge">pdf</code> and raw <code class="language-plaintext highlighter-rouge">html</code> files, as well as the figure and movie files, are located in the repo.</li> <li>The <code class="language-plaintext highlighter-rouge">html</code> files can be viewed in a browser by instead following the link to the GitHub pages <a href="https://julien-arino.github.io/presentations/">version of the repo</a>.</li> <li></li> </ul>]]></content><author><name></name></author><category term="presentations"/><summary type="html"><![CDATA[How to use Marp to make nice looking presentation slides, from the perspective of an only-partly-savvy computer user.]]></summary></entry><entry><title type="html">Spatio-temporal spread of COVID-19: considerations and modelling</title><link href="https://julien-arino.github.io/blog/2022/spatio-temporal-spread-of-covid-19-a-review/" rel="alternate" type="text/html" title="Spatio-temporal spread of COVID-19: considerations and modelling"/><published>2022-02-15T00:00:00+00:00</published><updated>2022-02-15T00:00:00+00:00</updated><id>https://julien-arino.github.io/blog/2022/spatio-temporal-spread-of-covid-19-a-review</id><content type="html" xml:base="https://julien-arino.github.io/blog/2022/spatio-temporal-spread-of-covid-19-a-review/"><![CDATA[<p>The paper I briefly present here together with some of the code used to generate figures, was published as “Describing, Modelling and Forecasting the Spatial and Temporal Spread of COVID-19: A Short Review” in <em>Fields Institute Communications</em> <strong>85</strong>:25-51 (2022). It can be downloaded <a href="https://doi.org/10.1007/978-3-030-85053-1_2">here</a> or from my webpage <a href="https://server.math.umanitoba.ca/~jarino/publications/Arino-2022-FIC85.pdf">here</a>. An older version is available on arXiv <a href="https://arxiv.org/pdf/2102.02457.pdf">here</a>.</p> <p>In the paper, I review several different aspects.</p> <ol> <li>The general context of mathematical models of the spatio-temporal spread of infectious pathogens.</li> <li>The details of how the first wave (mostly) of COVID-19 spread.</li> <li>Some spatio-temporal models that were considered specifically for COVID-19.</li> </ol> <p>Refer to the paper for details. Here, I describe how the data was gathered and the figures were produced.</p> <h1 id="collecting-data-on-initial-spread">Collecting data on initial spread</h1> <p>There are different sources for case data, but my favourite when considering the world-level situation is the one curated by JHSSE. I have an <code class="language-plaintext highlighter-rouge">R</code> script that pulls the data and performs basic pre-processing. This script is in turn called by a short <code class="language-plaintext highlighter-rouge">bash</code> script that runs in <code class="language-plaintext highlighter-rouge">cron</code>, so that data pulling happens every day. Note that the data on initial spread is not concerned by this pull operation, I am just detailing this point here for completeness.</p> <p>The JHSSE site is, understandably, concerned about the current and future evolution of COVID-19 and thus the data on the initial spread needs to be investigated further. For this, I relied on a combination of Wikipedia and Google News search, threw in some GISAID data..</p> <h1 id="the-tsa-data">The TSA data</h1> <p>If you have initiated an public airplane trip in the USA in the past few years, you know the system. For those who have not, here is how things work. From the unsecured area in an airport, the first security check involves showing your boarding pass and an identification document to a Transportation Security Administration (<a href="https://www.tsa.gov/">TSA</a>) officer who verifies both before allowing you to proceed with the remainder of the checks (baggage and body scan, etc.) to admit you into the secure zone of the airport.</p> <p>When considering air travel, this data is very interesting. Indeed, one is checked only in the first airport of a trip, regardless of the number of connecting flights taken; this means that the data is quite representative of the number of trips initiated in the USA on a given day. The TSA records how many of these checks happen and reports this data openly; it is available <a href="https://www.tsa.gov/coronavirus/passenger-throughput">here</a>.</p> <p>Interestingly, the data is provided “shifted”, i.e., the year to year difference is shown in terms of corresponding day of the week. Comparing, say, 3 January 2021 (a Sunday) and 3 January 2022 (a Monday) makes little sense. However, this means that while the table can be consumed “as is” for a plot comparing yearly numbers of checks, it also needs to be processed a little before being stored or used for anything not straightforward. This is further required because of the presentation of the table, which has the latest data posted as the top row, decreasing dates, then wraps around and has the next missing date as the last day. For instance, writing this on 15 February, the table has 14 February as its top row, decreasing days, then has 16 February as its last row (because 16 February 16 corresponds to 15 February last year).</p> <p>So let us dig into this data. First, the basics. Let us grab the data and clean it.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Grab the data</span><span class="w">
</span><span class="n">tsa</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">htmltab</span><span class="o">::</span><span class="n">htmltab</span><span class="p">(</span><span class="s2">"https://www.tsa.gov/coronavirus/passenger-throughput"</span><span class="p">,</span><span class="w">
                       </span><span class="n">which</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">rm_nodata_cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span><span class="c1"># Slight change of column names for convenience</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">tsa</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"date"</span><span class="p">,</span><span class="w"> </span><span class="s2">"vol2022"</span><span class="p">,</span><span class="w"> </span><span class="s2">"vol2021"</span><span class="p">,</span><span class="w"> </span><span class="s2">"vol2020"</span><span class="p">,</span><span class="w"> </span><span class="s2">"vol2019"</span><span class="p">)</span><span class="w">
</span><span class="c1"># Get rid of thousands separators, make numbers</span><span class="w">
</span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">c</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"vol2022"</span><span class="p">,</span><span class="s2">"vol2021"</span><span class="p">,</span><span class="s2">"vol2020"</span><span class="p">,</span><span class="s2">"vol2019"</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
   </span><span class="n">tsa</span><span class="p">[[</span><span class="n">c</span><span class="p">]]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">","</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tsa</span><span class="p">[[</span><span class="n">c</span><span class="p">]])</span><span class="w">
   </span><span class="n">tsa</span><span class="p">[[</span><span class="n">c</span><span class="p">]]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">tsa</span><span class="p">[[</span><span class="n">c</span><span class="p">]])</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="c1"># Make dates proper</span><span class="w">
</span><span class="n">tsa</span><span class="o">$</span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">lubridate</span><span class="o">::</span><span class="n">mdy</span><span class="p">(</span><span class="n">tsa</span><span class="o">$</span><span class="n">date</span><span class="p">)</span></code></pre></figure> <p>If we want to plot things with the latest day in the data as the first day, things are easy. Note that we use the “axis prettyfier” that I presented <a href="https://julien-arino.github.io/2018/US-plotting-nice-axes-and-cropping">here</a>.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Get range of values to plot and compute pretty y axis</span><span class="w">
</span><span class="n">y_min</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">min</span><span class="p">(</span><span class="n">tsa</span><span class="p">[,</span><span class="m">2</span><span class="o">:</span><span class="m">5</span><span class="p">],</span><span class="w"> </span><span class="n">na.rm</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">y_max</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">max</span><span class="p">(</span><span class="n">tsa</span><span class="p">[,</span><span class="m">2</span><span class="o">:</span><span class="m">5</span><span class="p">],</span><span class="w"> </span><span class="n">na.rm</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">y_range</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">make_y_axis</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="n">y_min</span><span class="p">,</span><span class="w"> </span><span class="n">y_max</span><span class="p">))</span><span class="w">
</span><span class="c1"># Make a colour palette</span><span class="w">
</span><span class="n">my_palette</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sprintf</span><span class="p">(</span><span class="s2">"dodgerblue%d"</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="o">:</span><span class="m">4</span><span class="p">)</span><span class="w">
</span><span class="c1"># Start the plot. Plot 2019</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">tsa</span><span class="o">$</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">tsa</span><span class="o">$</span><span class="n">vol2019</span><span class="o">*</span><span class="n">y_range</span><span class="o">$</span><span class="n">factor</span><span class="p">,</span><span class="w"> </span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"l"</span><span class="p">,</span><span class="w">
     </span><span class="n">ylim</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">y_min</span><span class="p">,</span><span class="n">y_max</span><span class="p">)</span><span class="o">*</span><span class="n">y_range</span><span class="o">$</span><span class="n">factor</span><span class="p">,</span><span class="w">
     </span><span class="n">lwd</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"red"</span><span class="p">,</span><span class="w">
     </span><span class="n">xaxs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"i"</span><span class="p">,</span><span class="w"> </span><span class="n">yaxt</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"n"</span><span class="p">,</span><span class="w">
     </span><span class="n">xlab</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Month"</span><span class="p">,</span><span class="w"> </span><span class="n">ylab</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Travellers screened"</span><span class="p">)</span><span class="w">
</span><span class="c1"># Plot remaining years</span><span class="w">
</span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">y</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">2020</span><span class="o">:</span><span class="m">2022</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">vol_y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sprintf</span><span class="p">(</span><span class="s2">"vol%d"</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">)</span><span class="w">
  </span><span class="n">lines</span><span class="p">(</span><span class="n">tsa</span><span class="o">$</span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">tsa</span><span class="p">[[</span><span class="n">vol_y</span><span class="p">]]</span><span class="o">*</span><span class="n">y_range</span><span class="o">$</span><span class="n">factor</span><span class="p">,</span><span class="w">
        </span><span class="n">lwd</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">my_palette</span><span class="p">[</span><span class="m">2023</span><span class="o">-</span><span class="n">y</span><span class="p">])</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="c1"># Throw in the axis, legend..</span><span class="w">
</span><span class="n">axis</span><span class="p">(</span><span class="n">side</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">at</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">y_range</span><span class="o">$</span><span class="n">ticks</span><span class="p">,</span><span class="w"> </span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">y_range</span><span class="o">$</span><span class="n">labels</span><span class="p">,</span><span class="w"> </span><span class="n">las</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
</span><span class="n">legend</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"bottomright"</span><span class="p">,</span><span class="w"> </span><span class="n">legend</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"2019"</span><span class="p">,</span><span class="w"> </span><span class="s2">"2020"</span><span class="p">,</span><span class="w"> </span><span class="s2">"2021"</span><span class="p">,</span><span class="w"> </span><span class="s2">"2022"</span><span class="p">),</span><span class="w"> 
       </span><span class="n">lty</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">lwd</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">2</span><span class="p">),</span><span class="w"> 
       </span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"red"</span><span class="p">,</span><span class="w"> </span><span class="n">my_palette</span><span class="p">),</span><span class="w">
       </span><span class="n">inset</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.01</span><span class="p">)</span></code></pre></figure> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/TSA_screens-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/TSA_screens-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/TSA_screens-1400.webp"/> <img src="/assets/img/TSA_screens.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="TSA checks" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Okay, this is a little confusing. The most recent data is in the top right, the blue curve over the red one.</p> <p>Things become a little hairier if one wants to, say, plot all the data in sequence rather than in parallel, i.e., plot all dates from 2019 to today. Of course, the table provided by the TSA is itself created from data that is in the format we want, but as far as I am able to tell, the table we downloaded earlier is the only way for the public to access that data. (If anybody knows if the data is on an Open Data server such as <a href="https://www.data.gov/">data.gov</a> in unedited form, drop me an email.)</p> <p>To get a sense of what needs to be done, let us first look at several interesting places in the table: the top (the most recent data points), the switching point between calendar years and the bottom (with the soon to be filled information). Looking at the situation today (15 February 2022), this is what we have.</p> <table class="table-striped"> <thead> <tr> <th style="text-align: left">date</th> <th style="text-align: right">vol2022</th> <th style="text-align: right">vol2021</th> <th style="text-align: right">vol2020</th> <th style="text-align: right">vol2019</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">2022-02-14</td> <td style="text-align: right">1731473</td> <td style="text-align: right">967693</td> <td style="text-align: right">2494922</td> <td style="text-align: right">1922613</td> </tr> <tr> <td style="text-align: left">2022-02-13</td> <td style="text-align: right">1815824</td> <td style="text-align: right">946458</td> <td style="text-align: right">2198657</td> <td style="text-align: right">2227730</td> </tr> <tr> <td style="text-align: left">2022-02-12</td> <td style="text-align: right">1534080</td> <td style="text-align: right">900696</td> <td style="text-align: right">1972248</td> <td style="text-align: right">1950385</td> </tr> <tr> <td style="text-align: left">2022-02-11</td> <td style="text-align: right">1914374</td> <td style="text-align: right">1151420</td> <td style="text-align: right">2507588</td> <td style="text-align: right">1620239</td> </tr> <tr> <td style="text-align: left"> </td> <td style="text-align: right"> </td> <td style="text-align: right"> </td> <td style="text-align: right"> </td> <td style="text-align: right"> </td> </tr> <tr> <td style="text-align: left">2022-01-02</td> <td style="text-align: right">2023309</td> <td style="text-align: right">1327289</td> <td style="text-align: right">2422272</td> <td style="text-align: right">2202111</td> </tr> <tr> <td style="text-align: left">2022-01-01</td> <td style="text-align: right">1616316</td> <td style="text-align: right">1192881</td> <td style="text-align: right">2178656</td> <td style="text-align: right">2345103</td> </tr> <tr> <td style="text-align: left">2021-12-31</td> <td style="text-align: right">NA</td> <td style="text-align: right">1650795</td> <td style="text-align: right">805990</td> <td style="text-align: right">2311732</td> </tr> <tr> <td style="text-align: left">2021-12-30</td> <td style="text-align: right">NA</td> <td style="text-align: right">2049604</td> <td style="text-align: right">874406</td> <td style="text-align: right">2392331</td> </tr> <tr> <td style="text-align: left"> </td> <td style="text-align: right"> </td> <td style="text-align: right"> </td> <td style="text-align: right"> </td> <td style="text-align: right"> </td> </tr> <tr> <td style="text-align: left">2021-02-19</td> <td style="text-align: right">NA</td> <td style="text-align: right">1059452</td> <td style="text-align: right">2429489</td> <td style="text-align: right">2022861</td> </tr> <tr> <td style="text-align: left">2021-02-18</td> <td style="text-align: right">NA</td> <td style="text-align: right">914823</td> <td style="text-align: right">2358511</td> <td style="text-align: right">2177690</td> </tr> <tr> <td style="text-align: left">2021-02-17</td> <td style="text-align: right">NA</td> <td style="text-align: right">773422</td> <td style="text-align: right">2129862</td> <td style="text-align: right">2476445</td> </tr> <tr> <td style="text-align: left">2021-02-16</td> <td style="text-align: right">NA</td> <td style="text-align: right">738825</td> <td style="text-align: right">2190300</td> <td style="text-align: right">2147045</td> </tr> </tbody> </table> <p>My interpretation (which could very well be wrong) of this table is the following. The days in 2022 (until the point where the 2022 column starts to contains NA) are the “real” week days. 2022-02-14, for instance, was a Monday. Then in the remaining columns on that row, we find the closest Monday: in 2021, this was 2021-02-15, in 2020, 2020-02-17 (yay for leap years!) and in 2019, 2020-02-18.</p> <p>Then, once the 2022 column starts to contain NAs because the data points would be in the future, the same becomes true with the 2021 dates remaining. But this leaves some questions:</p> <ol> <li>How was 2020-02-29 dealt with?</li> <li>How are years patched together?</li> <li>Can the overall time series be recomposed by taking the rows from vol2022 from 2022-02-14 to 2022-01-01, ten the rows from vol2021 from 2021-120-31 to 2021-02-16, then the rows from vol2021 from 2022-02-14 to 2022-01-01, etc.?</li> </ol> <p>Altogether: it would be really nice if the TSA put the time series on data.gov! In the meantime, let us assemble the data in sequence and accept the fact that there probably will be issues with the exact dates.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Find 1 January in dates</span><span class="w">
</span><span class="n">idx_Jan01</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">which</span><span class="p">(</span><span class="n">tsa</span><span class="o">$</span><span class="n">date</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">lubridate</span><span class="o">::</span><span class="n">ymd</span><span class="p">(</span><span class="s2">"2022-01-01"</span><span class="p">))</span><span class="w">
</span><span class="c1"># Where we will store the result</span><span class="w">
</span><span class="n">tsa.ts</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">()</span><span class="w">
</span><span class="c1"># Assume all year cutoffs are at the same point on each row</span><span class="w">
</span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">c</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">2</span><span class="o">:</span><span class="m">5</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">tsa.ts</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">tsa.ts</span><span class="p">,</span><span class="w"> </span><span class="n">tsa</span><span class="p">[</span><span class="n">idx_Jan01</span><span class="m">+1</span><span class="o">:</span><span class="nf">dim</span><span class="p">(</span><span class="n">tsa</span><span class="p">)[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">c</span><span class="p">])</span><span class="w">
  </span><span class="n">tsa.ts</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">tsa.ts</span><span class="p">,</span><span class="w"> </span><span class="n">tsa</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="n">idx_Jan01</span><span class="p">,</span><span class="w"> </span><span class="n">c</span><span class="p">])</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="c1"># Get rid of the NAs we put in there..</span><span class="w">
</span><span class="n">tsa.ts</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tsa.ts</span><span class="p">[</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">tsa.ts</span><span class="p">)]</span><span class="w">
</span><span class="c1"># Make a data frame</span><span class="w">
</span><span class="n">tsa.ts</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="w">
  </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">seq</span><span class="p">(</span><span class="n">tsa</span><span class="o">$</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">-</span><span class="nf">length</span><span class="p">(</span><span class="n">tsa.ts</span><span class="p">)</span><span class="m">+1</span><span class="p">,</span><span class="w"> </span><span class="n">tsa</span><span class="o">$</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"day"</span><span class="p">),</span><span class="w">
  </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">rev</span><span class="p">(</span><span class="n">tsa.ts</span><span class="p">[</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">tsa.ts</span><span class="p">)]))</span></code></pre></figure> <p>Let us plot the result. We will add a moving average, so define the following function.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">ma</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">7</span><span class="p">,</span><span class="w"> </span><span class="n">sides</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">stats</span><span class="o">::</span><span class="n">filter</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="m">1</span><span class="o">/</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">n</span><span class="p">),</span><span class="w"> </span><span class="n">sides</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sides</span><span class="p">)</span><span class="w">
</span><span class="p">}</span></code></pre></figure> <p>Note that we specify that the filter function is the one from the <code class="language-plaintext highlighter-rouge">stats</code> library (the default one). This is important in case we use the <code class="language-plaintext highlighter-rouge">dplyr</code> library, which redefines the function. We get the following figure, in which the red is the moving average</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/TSA_screens_ts-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/TSA_screens_ts-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/TSA_screens_ts-1400.webp"/> <img src="/assets/img/TSA_screens_ts.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="TSA checks as time series" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Whether the cutoffs are appropriate remains to be seen..</p>]]></content><author><name></name></author><category term="data"/><category term="R"/><summary type="html"><![CDATA[A review of the spatio-temporal spread of COVID-19, both in terms of actual spread and in terms of modelling, that I wrote for Fields Institute Communications.]]></summary></entry><entry><title type="html">Mathematical epidemiology in a data-rich world</title><link href="https://julien-arino.github.io/blog/2020/mathematical-epidemiology-in-a-data-rich-world/" rel="alternate" type="text/html" title="Mathematical epidemiology in a data-rich world"/><published>2020-01-15T00:00:00+00:00</published><updated>2020-01-15T00:00:00+00:00</updated><id>https://julien-arino.github.io/blog/2020/mathematical-epidemiology-in-a-data-rich-world</id><content type="html" xml:base="https://julien-arino.github.io/blog/2020/mathematical-epidemiology-in-a-data-rich-world/"><![CDATA[<p>Find the code <a href="https://github.com/julien-arino/modelling-with-data">here</a>.</p> <p>This post contains some information about the paper <a href="https://doi.org/10.1016/j.idm.2019.12.008">Mathematical epidemiology in a data-rich world</a>, <a href="https://www.sciencedirect.com/journal/infectious-disease-modelling"><em>Infectious Disease Modelling</em></a> <strong>5</strong>: 161-188, 2020.</p> <p>The aim of the paper is to provide some ideas about the acquisition and use, in mathematical epidemiology models, of data originating from open data sources.</p> <p>The paper is part of a special issue on <a href="https://www.sciencedirect.com/journal/infectious-disease-modelling/special-issue/10Z42V1KN0Q"><em>Confronting Infectious Disease Models with Public Health Data</em></a>, edited by <a href="https://sites.ualberta.ca/~myli/">Michael Li</a>, <a href="https://www.math.uvic.ca/~junlingm/dokuwiki/doku.php">Junling Ma</a>, <a href="https://www.researchgate.net/profile/Zhen_Jin/info">Zen Jin</a> and myself.</p> <p>The paper was supposed to come with an electronic appendix, which at present is not included. Also, some edition related quirks were added because of the journal style, with in particular, the <code class="language-plaintext highlighter-rouge">R</code> code appearing as images rather than text and therefore not being selectable. As a consequence, I have made a copy available as a GitHub repository (<a href="https://github.com/julien-arino/modelling-with-data">here</a>). My plan is to keep the file there up to date if links given in the paper were to change.</p> <h2 id="writing-a-scientific-paper-in-rmarkdown">Writing a scientific paper in <code class="language-plaintext highlighter-rouge">Rmarkdown</code></h2> <p>While I have been using <code class="language-plaintext highlighter-rouge">Rmarkdown</code> for a while to generate reports about some of the work I do in the context of the global spread of infectious diseases, I had never actually tried to produce a proper paper using this model. Here are some recommendations based on experience developed in the process.</p> <ol> <li>Save a local copy of your data. Keep in mind that you could end up editing your file while onboard a plane with no wifi, or in a country that filters some sites or who knows what. In any event: with poor or inexistent Internet access. The method I have used in the paper is to include all Internet-based requests within tests and set a global variable <code class="language-plaintext highlighter-rouge">DOWNLOAD</code> that indicates where the data should be downloaded from the web (<code class="language-plaintext highlighter-rouge">TRUE</code>) or if the local cache should be used (<code class="language-plaintext highlighter-rouge">FALSE</code>).</li> <li>Producing a pdf is easy; using a publisher’s tex style is not as easy. For now, I have only included a stripped down version of my <code class="language-plaintext highlighter-rouge">Rmarkdown</code> file that should work out of the box. I will later include in the repository the file that uses the Elsevier document class <code class="language-plaintext highlighter-rouge">elsarticle</code>.</li> </ol> <p><strong>Update 2022-02-15</strong> Because of work on COVID-19 response, I have not posted anything in over two years. For an upcoming summer school, I have to revisit some work on the use of data scraped from Internet and in particular, ensure that the code still works. The revised code is still located <a href="https://github.com/julien-arino/modelling-with-data">here</a> and supersedes the old code.</p>]]></content><author><name></name></author><category term="r-code"/><category term="data"/><category term="simulation"/><summary type="html"><![CDATA[Comments on and Rmarkdown source code of the paper Mathematical epidemiology in a data-rich world (Infectious Diseases Modelling, 2020).]]></summary></entry><entry><title type="html">Ugly loops versus pretty vectors</title><link href="https://julien-arino.github.io/blog/2019/ugly-loops/" rel="alternate" type="text/html" title="Ugly loops versus pretty vectors"/><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><id>https://julien-arino.github.io/blog/2019/ugly-loops</id><content type="html" xml:base="https://julien-arino.github.io/blog/2019/ugly-loops/"><![CDATA[<p>The other day, I posted a prototypical example of use of parLapply, somewhat more advanced than the ones in the documentation; see <a href="https://julien-arino.github.io/blog/2019/skel-parLapply">here</a>.</p> <p>Well, part of the example I gave uses one of my most biggest coding pet peaves, something that I have been fighting against ever since my MatLab days: the dreaded unnecessary <em>for loop</em>. As I was teaching myself the use of the <code class="language-plaintext highlighter-rouge">tictoc</code> library, I thought I would illustrate both.</p> <p>To keep in the spirit of the example in the post mentioned, we set up variations of up to two parameters, \(\beta\) and \(S_0\). We set base values for these parameters.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">param</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">()</span><span class="w">
</span><span class="n">param</span><span class="o">$</span><span class="n">beta</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1e-6</span><span class="w">
</span><span class="n">param</span><span class="o">$</span><span class="n">S0</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10000</span></code></pre></figure> <p>We will try different ranges of number of cases.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">nb_sims</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">10000</span><span class="p">,</span><span class="m">50000</span><span class="p">,</span><span class="m">100000</span><span class="p">,</span><span class="m">500000</span><span class="p">,</span><span class="m">1000000</span><span class="p">,</span><span class="m">5000000</span><span class="p">,</span><span class="m">10000000</span><span class="p">)</span></code></pre></figure> <p>Now loop on the number of cases. First, clear the <code class="language-plaintext highlighter-rouge">tictoc</code> log, in case it already exists. In each loop, we take note of the time taken to accomplish each group of operations.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">tictoc</span><span class="o">::</span><span class="n">tic.clearlog</span><span class="p">()</span><span class="w">
</span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">nb_sims</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="c1"># Just for info in case things get longish</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">sprintf</span><span class="p">(</span><span class="s2">"%d - %d"</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">which</span><span class="p">(</span><span class="n">nb_sims</span><span class="o">==</span><span class="n">n</span><span class="p">)))</span><span class="w">
  </span><span class="c1"># The loop version</span><span class="w">
  </span><span class="n">tictoc</span><span class="o">::</span><span class="n">tic</span><span class="p">(</span><span class="n">sprintf</span><span class="p">(</span><span class="s2">"loop_%d"</span><span class="p">,</span><span class="n">n</span><span class="p">))</span><span class="w">
  </span><span class="n">param_vary</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">()</span><span class="w">
  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">n</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">param_vary</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">()</span><span class="w">
    </span><span class="n">param_vary</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="o">$</span><span class="n">beta</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">runif</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">min</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1e-9</span><span class="p">,</span><span class="w"> </span><span class="n">max</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1e-4</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="p">(</span><span class="n">n</span><span class="m">+1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="m">2</span><span class="o">*</span><span class="n">n</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">param_vary</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">()</span><span class="w">
    </span><span class="n">param_vary</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="o">$</span><span class="n">S0</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">runif</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">min</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1000</span><span class="p">,</span><span class="w"> </span><span class="n">max</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">100000</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="p">(</span><span class="m">2</span><span class="o">*</span><span class="n">n</span><span class="m">+1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="m">3</span><span class="o">*</span><span class="n">n</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">param_vary</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">()</span><span class="w">
    </span><span class="n">param_vary</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="o">$</span><span class="n">beta</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">runif</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">min</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1e-9</span><span class="p">,</span><span class="w"> </span><span class="n">max</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1e-4</span><span class="p">)</span><span class="w">
    </span><span class="n">param_vary</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="o">$</span><span class="n">S0</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">runif</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">min</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1000</span><span class="p">,</span><span class="w"> </span><span class="n">max</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">100000</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="c1"># Vector version</span><span class="w">
  </span><span class="n">tictoc</span><span class="o">::</span><span class="n">toc</span><span class="p">(</span><span class="n">log</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">quiet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
  </span><span class="n">tictoc</span><span class="o">::</span><span class="n">tic</span><span class="p">(</span><span class="n">sprintf</span><span class="p">(</span><span class="s2">"vect_%d"</span><span class="p">,</span><span class="n">n</span><span class="p">))</span><span class="w">
  </span><span class="n">param_vary</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">cbind</span><span class="p">(</span><span class="n">runif</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">min</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1e-9</span><span class="p">,</span><span class="w"> </span><span class="n">max</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1e-4</span><span class="p">),</span><span class="w">
                            </span><span class="nf">rep</span><span class="p">(</span><span class="n">param</span><span class="o">$</span><span class="n">S0</span><span class="p">,</span><span class="n">n</span><span class="p">)),</span><span class="w">
                      </span><span class="n">cbind</span><span class="p">(</span><span class="nf">rep</span><span class="p">(</span><span class="n">param</span><span class="o">$</span><span class="n">beta</span><span class="p">,</span><span class="n">n</span><span class="p">),</span><span class="w">
                            </span><span class="n">runif</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">min</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1000</span><span class="p">,</span><span class="w"> </span><span class="n">max</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">100000</span><span class="p">)),</span><span class="w">
                      </span><span class="n">cbind</span><span class="p">(</span><span class="n">runif</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">min</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1e-9</span><span class="p">,</span><span class="w"> </span><span class="n">max</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1e-4</span><span class="p">),</span><span class="w">
                            </span><span class="n">runif</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">min</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1000</span><span class="p">,</span><span class="w"> </span><span class="n">max</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">100000</span><span class="p">)))</span><span class="w">
  </span><span class="n">colnames</span><span class="p">(</span><span class="n">param_vary</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"beta"</span><span class="p">,</span><span class="s2">"S0"</span><span class="p">)</span><span class="w">
  </span><span class="n">tictoc</span><span class="o">::</span><span class="n">toc</span><span class="p">(</span><span class="n">log</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">quiet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
  </span><span class="c1"># Convert vector to list</span><span class="w">
  </span><span class="n">tictoc</span><span class="o">::</span><span class="n">tic</span><span class="p">(</span><span class="n">sprintf</span><span class="p">(</span><span class="s2">"conv_%d"</span><span class="p">,</span><span class="n">n</span><span class="p">))</span><span class="w">
  </span><span class="n">param_vary</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="nf">seq_len</span><span class="p">(</span><span class="n">nrow</span><span class="p">(</span><span class="n">param_vary</span><span class="p">)),</span><span class="w">
                       </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="n">param_vary</span><span class="p">[</span><span class="n">i</span><span class="p">,])</span><span class="w">
  </span><span class="n">tictoc</span><span class="o">::</span><span class="n">toc</span><span class="p">(</span><span class="n">log</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">quiet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">log.lst</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tictoc</span><span class="o">::</span><span class="n">tic.log</span><span class="p">(</span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span></code></pre></figure> <p>The following is adapted from the <code class="language-plaintext highlighter-rouge">tictoc</code> documentation.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">timings</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">cbind</span><span class="p">(</span><span class="n">nb_sims</span><span class="p">,</span><span class="w">
                 </span><span class="n">matrix</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">lapply</span><span class="p">(</span><span class="n">log.lst</span><span class="p">,</span><span class="w">
                                             </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="n">x</span><span class="o">$</span><span class="n">toc</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">x</span><span class="o">$</span><span class="n">tic</span><span class="p">)),</span><span class="w">
                        </span><span class="n">nrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">nb_sims</span><span class="p">),</span><span class="w">
                        </span><span class="n">ncol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w">
                        </span><span class="n">byrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">))</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">timings</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"n"</span><span class="p">,</span><span class="s2">"loopT"</span><span class="p">,</span><span class="s2">"vectT"</span><span class="p">,</span><span class="s2">"convT"</span><span class="p">)</span><span class="w">
</span><span class="n">timings</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">timings</span><span class="p">)</span></code></pre></figure> <p>Add a few additional pieces of information about timing: the total time in the second case (making the vectors and converting them to lists) as well as acceleration factors when making the vector and in total of the second method.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">timings</span><span class="o">$</span><span class="n">sumVect</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">timings</span><span class="o">$</span><span class="n">vectT</span><span class="o">+</span><span class="n">timings</span><span class="o">$</span><span class="n">convT</span><span class="w">
</span><span class="n">timings</span><span class="o">$</span><span class="n">multVect</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">round</span><span class="p">(</span><span class="n">timings</span><span class="o">$</span><span class="n">loopT</span><span class="o">/</span><span class="n">timings</span><span class="o">$</span><span class="n">vectT</span><span class="p">,</span><span class="m">2</span><span class="p">)</span><span class="w">
</span><span class="n">timings</span><span class="o">$</span><span class="n">multSVect</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">round</span><span class="p">(</span><span class="n">timings</span><span class="o">$</span><span class="n">loopT</span><span class="o">/</span><span class="n">timings</span><span class="o">$</span><span class="n">sumVect</span><span class="p">,</span><span class="m">2</span><span class="p">)</span></code></pre></figure> <p>Finally, use <code class="language-plaintext highlighter-rouge">knitr</code> to make a decent looking table of the results.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">knitr</span><span class="o">::</span><span class="n">kable</span><span class="p">(</span><span class="n">timings</span><span class="p">,</span><span class="n">format.args</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">big.mark</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">","</span><span class="p">,</span><span class="n">scientific</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">))</span></code></pre></figure> <p>Here are the results:</p> <table> <thead> <tr> <th style="text-align: right">n</th> <th style="text-align: right">loopT</th> <th style="text-align: right">vectT</th> <th style="text-align: right">convT</th> <th style="text-align: right">sumVect</th> <th style="text-align: right">multVect</th> <th style="text-align: right">multSVect</th> </tr> </thead> <tbody> <tr> <td style="text-align: right">10,000</td> <td style="text-align: right">0.138</td> <td style="text-align: right">0.001</td> <td style="text-align: right">0.046</td> <td style="text-align: right">0.047</td> <td style="text-align: right">138.00</td> <td style="text-align: right">2.94</td> </tr> <tr> <td style="text-align: right">50,000</td> <td style="text-align: right">0.545</td> <td style="text-align: right">0.006</td> <td style="text-align: right">0.327</td> <td style="text-align: right">0.333</td> <td style="text-align: right">90.83</td> <td style="text-align: right">1.64</td> </tr> <tr> <td style="text-align: right">100,000</td> <td style="text-align: right">1.207</td> <td style="text-align: right">0.008</td> <td style="text-align: right">0.346</td> <td style="text-align: right">0.354</td> <td style="text-align: right">150.88</td> <td style="text-align: right">3.41</td> </tr> <tr> <td style="text-align: right">500,000</td> <td style="text-align: right">8.587</td> <td style="text-align: right">0.453</td> <td style="text-align: right">1.712</td> <td style="text-align: right">2.165</td> <td style="text-align: right">18.96</td> <td style="text-align: right">3.97</td> </tr> <tr> <td style="text-align: right">1,000,000</td> <td style="text-align: right">19.130</td> <td style="text-align: right">1.597</td> <td style="text-align: right">3.832</td> <td style="text-align: right">5.429</td> <td style="text-align: right">11.98</td> <td style="text-align: right">3.52</td> </tr> <tr> <td style="text-align: right">5,000,000</td> <td style="text-align: right">122.943</td> <td style="text-align: right">4.359</td> <td style="text-align: right">22.746</td> <td style="text-align: right">27.105</td> <td style="text-align: right">28.20</td> <td style="text-align: right">4.54</td> </tr> <tr> <td style="text-align: right">10,000,000</td> <td style="text-align: right">277.161</td> <td style="text-align: right">8.648</td> <td style="text-align: right">40.261</td> <td style="text-align: right">48.909</td> <td style="text-align: right">32.05</td> <td style="text-align: right">5.67</td> </tr> </tbody> </table> <p>Clearly, it would be better here to use a parallel version of <code class="language-plaintext highlighter-rouge">apply</code> operating on matrix rows than on lists, since this would not require a further conversion to a list. But the cases are not always this structured.</p> <p>Ah, yes, one last thing: when \(n\) is large, some of the variables can become quite large (the last matrix by itself is 10.1 Gb). Unless you have pretty decent RAM, don’t try this at home.</p>]]></content><author><name></name></author><category term="simulation"/><category term="r-code"/><summary type="html"><![CDATA[A comparison of the execution times of loops and vector operations in R using the tictoc library.]]></summary></entry><entry><title type="html">Thucydides and epidemiology</title><link href="https://julien-arino.github.io/blog/2019/Thucydides-and-epidemiology/" rel="alternate" type="text/html" title="Thucydides and epidemiology"/><published>2019-07-02T15:00:00+00:00</published><updated>2019-07-02T15:00:00+00:00</updated><id>https://julien-arino.github.io/blog/2019/Thucydides-and-epidemiology</id><content type="html" xml:base="https://julien-arino.github.io/blog/2019/Thucydides-and-epidemiology/"><![CDATA[<p>Those who have suffered through one of my talks know that when discussing the spatial and temporal spread of infectious diseases (i.e., most of the time), I typically start by showing a slide similar to this:</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/Thucydides_quote-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/Thucydides_quote-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/Thucydides_quote-1400.webp"/> <img src="/assets/img/Thucydides_quote.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="My boring Thucydides slide" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>I usually remark on the fact that this means the issue I am considering is not new and that almost two and a half millennia ago, Thucydides already gave a pretty “spatial” description of spread. I often advocate reading Thucydides. So I thought “why not make a blog post about this?”.. and here is said post.</p> <h2 id="thucydides">Thucydides</h2> <p>Regarding Thucydides himself, let me be lazy and just point to the <a href="https://en.wikipedia.org/wiki/Thucydides">Wikipedia page</a> about him. In (very) short, Thucydides was an Athenian who lived from circa 460 BCE to circa 400 BCE. His <em>History of the Peloponnesian War</em> is often considered as the first <em>scholarly</em> history book. The book gives an account of the Peloponnesian War (431–404 BCE) between the Peloponnesian League (led by Sparta) and the Delian League (led by Athens). Thucydides himself fought in that war, he was a General for Athens. For some reason, he fell out of love and was exiled; that is when he set on writing his <em>History</em>.</p> <h2 id="the-plague-of-athens">The plague of Athens</h2> <p>Of interest to me here is the part of the <em>History of the Peloponnesian War</em> that deals with the Plague of Athens, i.e., a few chapters in Book II (there are 8 books in the <em>History of the Peloponnesian War</em>). Concerning the <em>History of the Peloponnesian War</em>, the <a href="https://en.wikipedia.org/wiki/History_of_the_Peloponnesian_War">Wikipedia page</a> provides a useful topical breakdown. The text itself is accessible on several servers. Here, I will use a version in the <a href="http://www.perseus.tufts.edu/hopper/">Perseus Digital Library</a>. There are three versions in English and one in Greek there; I will be using <a href="http://catalog.perseus.org/catalog/urn:cts:greekLit:tlg0003.tlg001.perseus-eng3">this 1910 translation</a>; earlier translation use less modern English.</p> <p>However, let me start with a <em>caveat</em>. Here is another slide that I sometimes show.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/Plague_of_Athens_or_what-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/Plague_of_Athens_or_what-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/Plague_of_Athens_or_what-1400.webp"/> <img src="/assets/img/Plague_of_Athens_or_what.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Is it a bird? Is it a plane? Is it a plague?" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>This is a small sample of the medical literature on the topic. Clearly there is a good degree of uncertainty about the actual pathogen involved and everybody seems keen to claim it is their favourite pathogen that was involved. I will refer to the infection as <em>plague</em>, bearing in mind that it very likely is not.</p> <p>Anyway, let us now turn to the text itself. Notes present in the text were removed. Most of the text is quoted, with [..] indicating removed text.</p> <h3 id="the-plague-is-in-athens">The plague is in Athens</h3> <p>There are a few references to the plague in Book I. However, the description proper starts in <a href="http://www.perseus.tufts.edu/hopper/text?doc=Perseus:text:1999.01.0200:book=2:chapter=47">Book II, Chapter 47</a>.</p> <blockquote> <p>[..] Not many days after their [Lacedaemonians] arrival in Attica the plague first began to show itself among the Athenians. It was said that it had broken out in many places previously in the neighborhood of Lemnos and elsewhere; but a pestilence of such extent and mortality was nowhere remembered.</p> </blockquote> <p>Note one very interesting passage:</p> <blockquote> <p>Neither were the physicians at first of any service, ignorant as they were of the proper way to treat it, but they died themselves the most thickly, as they visited the sick most often [..]</p> </blockquote> <p>This is still very much the case almost 2,500 years later. For instance, during the SARS crisis of 2003, 44% of cases in Toronto were health care workers (HCW); see <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3323242/">this paper</a> for instance. During the West Africa Ebola Virus Disease crisis of 2014-2016, 881 HCW were infected, of which 513 died; see <a href="https://www.cdc.gov/vhf/ebola/pdf/impact-ebola-healthcare.pdf">here</a>. Other things do not change as well:</p> <blockquote> <p>Supplications in the temples, divinations, and so forth were found equally futile, till the overwhelming nature of the disaster at last put a stop to them altogether.</p> </blockquote> <h3 id="spatio-temporal-spread">Spatio-temporal spread</h3> <p>The part in my slide is found in <a href="http://www.perseus.tufts.edu/hopper/text?doc=Perseus:text:1999.01.0200:book=2:chapter=48">Chapter 48</a>.</p> <blockquote> <p>It first began, it is said, in the parts of Ethiopia above Egypt, and thence descended into Egypt and Libya and into most of the king’s country. Suddenly falling upon Athens, it first attacked the population in Piraeus,—which was the occasion of their saying that the Peloponnesians had poisoned the reservoirs, there being as yet no wells there—and afterwards appeared in the upper city, when the deaths became much more frequent.</p> </blockquote> <p>The <em>king’s country</em> referred to is Persia. One part I edit for brevity in my introduction slide is the one concerning the poisoning of wells. Note an interesting remark to conclude this chapter:</p> <blockquote> <p>All speculation as to its origin and its causes, if causes can be found adequate to produce so great a disturbance, I leave to other writers, whether lay or professional; for myself, I shall simply set down its nature, and explain the symptoms by which perhaps it may be recognized by the student, if it should ever break out again. This I can the better do, as I had the disease myself, and watched its operation in the case of others.</p> </blockquote> <p>Thus Thucydides in fact was himself infected by the plague.</p> <h3 id="the-symptoms">The symptoms</h3> <p>The next chapter (<a href="http://www.perseus.tufts.edu/hopper/text?doc=Perseus:text:1999.01.0200:book=2:chapter=49">Chapter 49</a>) describes symptoms. The relatively good yet generic description of these symptoms is probably the reason why so many hypotheses were formulated about the actual pathogen involved.</p> <blockquote> <p>[..] As a rule, however, there was no ostensible cause; but people in good health were all of a sudden attacked by violent heats in the head, and redness and inflammation in the eyes, the inward parts, such as the throat or tongue, becoming bloody and emitting an unnatural and fetid breath. These symptoms were followed by sneezing and hoarseness, after which the pain soon reached the chest, and produced a hard cough. When it fixed in the stomach, it upset it; and discharges of bile of every kind named by physicians ensued, accompanied by very great distress. In most cases also an ineffectual retching followed, producing violent spasms, which in some cases ceased soon after, in others much later. Externally the body was not very hot to the touch, nor pale in its appearance, but reddish, livid, and breaking out into small pustules and ulcers. But internally it burned so that the patient could not bear to have on him clothing or linen even of the very lightest description; or indeed to be otherwise than stark naked. What they would have liked best would have been to throw themselves into cold water; as indeed was done by some of the neglected sick, who plunged into the rain-tanks in their agonies of unquenchable thirst; though it made no difference whether they drank little or much. Besides this, the miserable feeling of not being able to rest or sleep never ceased to torment them. The body meanwhile did not waste away so long as the distemper was at its height, but held out to a marvel against its ravages; so that when they succumbed, as in most cases, on the seventh or eighth day to the internal inflammation, they had still some strength in them. But if they passed this stage, and the disease descended further into the bowels, inducing a violent ulceration there accompanied by severe diarrhea, this brought on a weakness which was generally fatal. For the disorder first settled in the head, ran its course from thence through the whole of the body, and even where it did not prove mortal, it still left its mark on the extremities; for it settled in the privy parts, the fingers and the toes, and many escaped with the loss of these, some too with that of their eyes. Others again were seized with an entire loss of memory on their first recovery, and did not know either themselves or their friends.</p> </blockquote> <p>In <a href="http://www.perseus.tufts.edu/hopper/text?doc=Perseus:text:1999.01.0200:book=2:chapter=50">Chapter 50</a>, Thucydides seems to indicate that there was human to bird transmission.</p> <blockquote> <p>But while the nature of the distemper was such as to baffle all description, and its attacks almost too grievous for human nature to endure, it was still in the following circumstance that its difference from all ordinary disorders was most clearly shown. All the birds and beasts that prey upon human bodies, either abstained from touching them (though there were many lying unburied), or died after tasting them. In proof of this, it was noticed that birds of this kind actually disappeared; they were not about the bodies, or indeed to be seen at all. But of course the effects which I have mentioned could best be studied in a domestic animal like the dog.</p> </blockquote> <p>Moving on to <a href="http://www.perseus.tufts.edu/hopper/text?doc=Perseus:text:1999.01.0200:book=2:chapter=51">Chapter 51</a>:</p> <blockquote> <p>Such then, if we pass over the varieties of particular cases, which were many and peculiar, were the general features of the distemper. Meanwhile the town enjoyed an immunity from all the ordinary disorders; or if any case occurred, it ended in this. Some died in neglect, others in the midst of every attention. No remedy was found that could be used as a specific; for what did good in one case, did harm in another. Strong and weak constitutions proved equally incapable of resistance, all alike being swept away, although dieted with the utmost precaution. By far the most terrible feature in the malady was the dejection which ensued when anyone felt himself sickening, for the despair into which they instantly fell took away their power of resistance, and left them a much easier prey to the disorder; besides which, there was the awful spectacle of men dying like sheep, through having caught the infection in nursing each other. This caused the greatest mortality. On the one hand, if they were afraid to visit each other, they perished from neglect; indeed many houses were emptied of their inmates for want of a nurse: on the other, if they ventured to do so, death was the consequence. This was especially the case with such as made any pretensions to goodness: honor made them unsparing of themselves in their attendance in their friends’ houses, where even the members of the family were at last worn out by the moans of the dying, and succumbed to the force of the disaster.</p> </blockquote> <p>Some temporary immunity seemed to arise and was noticed.</p> <blockquote> <p>Yet it was with those who had recovered from the disease that the sick and the dying found most compassion. These knew what it was from experience, and had now no fear for themselves; for the same man was never attacked twice—never at least fatally.</p> </blockquote> <p>As with many things in that era, proper observations and conclusions were extrapolated perhaps a little too much. [Edit in 2022: Although it should noted that during COVID-19, some individuals used this reasoning.]</p> <blockquote> <p>And such persons not only received the congratulations of others, but themselves also, in the elation of the moment, half entertained the vain hope that they were for the future safe from any disease whatsoever.</p> </blockquote> <h3 id="going-spatio-temporal-again">Going spatio-temporal again</h3> <p><a href="http://www.perseus.tufts.edu/hopper/text?doc=Perseus:text:1999.01.0200:book=2:chapter=52">Chapter 52</a> again raises issues related to problems of interest to me.</p> <blockquote> <p>An aggravation of the existing calamity was the influx from the country into the city, and this was especially felt by the new arrivals. As there were no houses to receive them, they had to be lodged at the hot season of the year in stifling cabins, where the mortality raged without restraint.</p> </blockquote> <h3 id="and-now-things-go-bad">And now things go bad..</h3> <p>Still in <a href="http://www.perseus.tufts.edu/hopper/text?doc=Perseus:text:1999.01.0200:book=2:chapter=52">Chapter 52</a>, we move on to the problem of dealing with extraordinary mortality.</p> <blockquote> <p>The bodies of dying men lay one upon another, and half-dead creatures reeled about the streets and gathered round all the fountains in their longing for water. The sacred places also in which they had quartered themselves were full of corpses of persons that had died there, just as they were; for as the disaster passed all bounds, men, not knowing what was to become of them, became utterly careless of everything, whether sacred or profane. All the burial rites before in use were entirely upset, and they buried the bodies as best they could. Many from want of the proper appliances, through so many of their friends having died already, had recourse to the most shameless sepultures: sometimes getting the start of those who had raised a pile, they threw their own dead body upon the stranger’s pyre and ignited it; sometimes they tossed the corpse which they were carrying on the top of another that was burning, and so went off.</p> </blockquote> <p>This is reminiscent of paintings by <a href="https://en.wikipedia.org/wiki/Michel_Serre">Michel Serre</a> describing the situation during the <a href="https://en.wikipedia.org/wiki/Great_Plague_of_Marseille">1720 plague of Marseille</a>.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/Chevalier_Roze_%C3%A0_la_Tourette_-_1720-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/Chevalier_Roze_%C3%A0_la_Tourette_-_1720-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/Chevalier_Roze_%C3%A0_la_Tourette_-_1720-1400.webp"/> <img src="/assets/img/Chevalier_Roze_%C3%A0_la_Tourette_-_1720.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Chevalier Roze à la Tourette - 1720" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Interestingly, during the 2014-2016 West Africa EVD epidemic, it is the non-breakdown of local funeral rites that was dangerous, since people were interacting with bodies that were still infectious. Funeral rites were not the only victims of the plague. As evidenced by <a href="http://www.perseus.tufts.edu/hopper/text?doc=Perseus:text:1999.01.0200:book=2:chapter=53">Chapter 53</a>, there was a sense of gloom and doom that led people to modify their behaviour.</p> <blockquote> <p>Nor was this the only form of lawless extravagance which owed its origin to the plague. Men now coolly ventured on what they had formerly done in a corner, and not just as they pleased, seeing the rapid transitions produced by persons in prosperity suddenly dying and those who before had nothing succeeding to their property. So they resolved to spend quickly and enjoy themselves, regarding their lives and riches as alike things of a day. Perseverance in what men called honor was popular with none, it was so uncertain whether they would be spared to attain the object; but it was settled that present enjoyment, and all that contributed to it, was both honorable and useful. Fear of gods or law of man there was none to restrain them. As for the first, they judged it to be just the same whether they worshiped them or not, as they saw all alike perishing; and for the last, no one expected to live to be brought to trial for his offenses, but each felt that a far severer sentence had been already passed upon them all and hung ever over their heads, and before this fell it was only reasonable to enjoy life a little.</p> </blockquote> <p>This was seen again during the Plagues of the Middle Ages. Finally, <a href="http://www.perseus.tufts.edu/hopper/text?doc=Perseus:text:1999.01.0200:book=2:chapter=54">Chapter 54</a> concludes the account of the plague. First, some considerations that date the text.</p> <blockquote> <p>Such was the nature of the calamity, and heavily did it weigh on the Athenians; death raging within the city and devastation without. Among other things which they remembered in their distress was, very naturally, the following verse which the old men said had long ago been uttered:</p> <p>“ A Dorian war shall come and with it death.”</p> <p>So a dispute arose as to whether dearth and not death had not been the word in the verse; but at the present juncture, it was of course decided in favor of the latter; for the people made their recollection fit in with their sufferings. I fancy, however, that if another Dorian war should ever afterwards come upon us, and a dearth should happen to accompany it, the verse will probably be read accordingly. The oracle also which had been given to the Lacedaemonians was now remembered by those who knew of it. When the God was asked whether they should go to war, he answered that if they put their might into it, victory would be theirs, and that he would himself be with them. With this oracle events were supposed to tally. For the plague broke out so soon as the Peloponnesians invaded Attica, and never entering Peloponnese （not at least to an extent worth noticing）, committed its worst ravages at Athens, and next to Athens, at the most populous of the other towns.</p> </blockquote> <p>Thucydides and his contemporaries can probably be excused: medical knowledge at the time was quite rudimentary, so why not involve oracles? And in their defence, people were not much more rational during the Great Plagues of the middle to late Middle Age in Europe. Finally, Thucydides concludes with a somewhat ominous and definitive:</p> <blockquote> <p>Such was the history of the plague.</p> </blockquote>]]></content><author><name></name></author><category term="epidemiology"/><summary type="html"><![CDATA[The plague of Athens of 430 BCE as told by Thucydides in the History of the Peloponnesian War.]]></summary></entry><entry><title type="html">Lowering the alpha value in an OSM map</title><link href="https://julien-arino.github.io/blog/2019/lowering-OSM-alpha/" rel="alternate" type="text/html" title="Lowering the alpha value in an OSM map"/><published>2019-06-20T15:52:00+00:00</published><updated>2019-06-20T15:52:00+00:00</updated><id>https://julien-arino.github.io/blog/2019/lowering-OSM-alpha</id><content type="html" xml:base="https://julien-arino.github.io/blog/2019/lowering-OSM-alpha/"><![CDATA[<p>The most recent version of the code used in this page (which might be a little different from the one here) can be found <a href="https://raw.githubusercontent.com/julien-arino/R-code/master/change_alpha_in_OSM_map.R">here</a>.</p> <p>Working on a poster with my postdoc, a problem came up where we wanted to increase the transparency of a map downloaded (and plotted) with <code class="language-plaintext highlighter-rouge">OpenStreetMap</code>, because the points we were plotting on it were not really visible. The solution is very simple. It goes without saying that you will need the <code class="language-plaintext highlighter-rouge">OpenStreetMap</code> library installed.</p> <p>The first thing to do is to create a function to add an alpha value to the hexadecimal colour codes used in the <code class="language-plaintext highlighter-rouge">OpenStreetMap</code> library. Note that we assume an alpha value in [0,1].</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">add_alpha_to_hex</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">h</span><span class="p">,</span><span class="n">alpha</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="k">if</span><span class="w"> </span><span class="p">((</span><span class="n">alpha</span><span class="w"> </span><span class="o">&lt;</span><span class="m">0</span><span class="p">)</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="p">(</span><span class="n">alpha</span><span class="o">&gt;</span><span class="m">1</span><span class="p">))</span><span class="w">
    </span><span class="nf">return</span><span class="p">(</span><span class="kc">NA</span><span class="p">)</span><span class="w">
  </span><span class="n">a</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.hexmode</span><span class="p">(</span><span class="nf">round</span><span class="p">(</span><span class="n">alpha</span><span class="o">*</span><span class="m">255</span><span class="p">))</span><span class="w">
  </span><span class="c1"># R format for hex colours with alpha is RGBA</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="n">h</span><span class="p">,</span><span class="n">a</span><span class="p">))</span><span class="w">
</span><span class="p">}</span></code></pre></figure> <p>Let us load a map of a small region in Winnipeg. We first need the coordinates of the upper left and lower right corners of the box we want to download.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">upperLeft</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">49.8833</span><span class="p">,</span><span class="m">-97.1818</span><span class="p">)</span><span class="w">
</span><span class="n">lowerRight</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">49.86310</span><span class="p">,</span><span class="m">-97.15081</span><span class="p">)</span></code></pre></figure> <p>We also need to specify a map type. We take a cute map type in which alpha effect is easy to see.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">map_type</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"stamen-watercolor"</span></code></pre></figure> <p>Download the map. For convenience, we store the tile colours.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">Winnipeg_map</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">OpenStreetMap</span><span class="o">::</span><span class="n">openmap</span><span class="p">(</span><span class="n">upperLeft</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">upperLeft</span><span class="p">,</span><span class="w">
                                       </span><span class="n">lowerRight</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">lowerRight</span><span class="p">,</span><span class="w">
                                       </span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">map_type</span><span class="p">)</span><span class="w">
</span><span class="n">stored_colours</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">Winnipeg_map</span><span class="o">$</span><span class="n">tiles</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="o">$</span><span class="n">colorData</span></code></pre></figure> <p>Finally, we plot the maps for several values of alpha.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">alpha</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">seq</span><span class="p">(</span><span class="m">0.1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.1</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">fileName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sprintf</span><span class="p">(</span><span class="s2">"~/Documents/DATA/tmp/Winnipeg_part_alpha%1.2f.png"</span><span class="p">,</span><span class="w">
                     </span><span class="n">alpha</span><span class="p">)</span><span class="w">
  </span><span class="n">Winnipeg_map</span><span class="o">$</span><span class="n">tiles</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="o">$</span><span class="n">colorData</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">add_alpha_to_hex</span><span class="p">(</span><span class="n">stored_colours</span><span class="p">,</span><span class="w">
                                                       </span><span class="n">alpha</span><span class="p">)</span><span class="w">
  </span><span class="n">png</span><span class="p">(</span><span class="n">file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">fileName</span><span class="p">,</span><span class="w"> 
      </span><span class="n">width</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">800</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">800</span><span class="p">)</span><span class="w">
  </span><span class="n">plot</span><span class="p">(</span><span class="n">Winnipeg_map</span><span class="p">)</span><span class="w">
  </span><span class="n">dev.off</span><span class="p">()</span><span class="w">
</span><span class="p">}</span></code></pre></figure> <p>Here are a few examples. First, the unaltered map (with alpha=1).</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/Winnipeg_part_alpha1.00-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/Winnipeg_part_alpha1.00-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/Winnipeg_part_alpha1.00-1400.webp"/> <img src="/assets/img/Winnipeg_part_alpha1.00.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Winnipeg neighbourhood alpha=1.0" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Second, the map when alpha=0.5.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/Winnipeg_part_alpha0.50-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/Winnipeg_part_alpha0.50-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/Winnipeg_part_alpha0.50-1400.webp"/> <img src="/assets/img/Winnipeg_part_alpha0.50.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Winnipeg neighbourhood alpha=0.5" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Finally, a very light map where alpha=0.1.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/Winnipeg_part_alpha0.10-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/Winnipeg_part_alpha0.10-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/Winnipeg_part_alpha0.10-1400.webp"/> <img src="/assets/img/Winnipeg_part_alpha0.10.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Winnipeg neighbourhood alpha=0.1" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="mapping"/><category term="r-code"/><summary type="html"><![CDATA[Simple solution to change the alpha channel (that is, the opacity or transparency) in an OpenStreetMap map in R, using a function that adds an alpha value to a hexadecimal RGB colour specification.]]></summary></entry></feed>